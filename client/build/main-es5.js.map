{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/sensor-data/sensor-data.component.ts","webpack:///src/app/sensor-data/sensor-data.component.html","webpack:///src/app/service/data-fetch.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","apiService","title","getData","subscribe","res","status","temp","temparature","humid","humidity","getHistoryData","console","log","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","SensorDataComponent","DataFetchService","httpClient","apiURL","apiURLHistory","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SensorDataComponent } from './sensor-data/sensor-data.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: SensorDataComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { DataFetchService } from './service/data-fetch.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'IOT-Azure-Training';\n  temp: any;\n  humid: any;\n  constructor(private apiService: DataFetchService) {}\n\n  ngOnInit(): void {\n    this.apiService.getData().subscribe((res) => {\n      if (res?.status === 200) {\n        this.temp = res.temparature;\n        this.humid = res.humidity;\n      }\n    });\n\n    this.apiService.getHistoryData().subscribe((res) => {\n      console.log(\"RES = \", res);\n      // if (res?.status === 200) {\n      //   this.temp = res.temparature;\n      //   this.humid = res.humidity;\n      // }\n    });\n  }\n}\n","<div class=\"container-body\">\n  <h3>Raspberry Pi - IOT Hub - Live Data</h3>\n  <div class=\"container\">\n    <div class=\"content\">\n      <h4>Temperature (in C)</h4>\n      {{ temp }}\n    </div>\n    <div class=\"content m-l\">\n      <h4>Humidity</h4>\n      {{ humid }}\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { DataFetchService } from '../service/data-fetch.service';\n\n@Component({\n  selector: 'app-sensor-data',\n  templateUrl: './sensor-data.component.html',\n  styleUrls: ['./sensor-data.component.scss'],\n})\nexport class SensorDataComponent implements OnInit {\n  constructor(private apiService: DataFetchService) {}\n\n  ngOnInit(): void {\n    // this.apiService.getData().subscribe((res) => {\n    //   console.log(res);\n    // });\n  }\n}\n","<p>sensor-data works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataFetchService {\n  apiURL = 'https://web20070076.azurewebsites.net/api/v1/getdata';\n  apiURLHistory = 'https://web20070076.azurewebsites.net/api/v1/history?from=2020-08-16T07:33:28.000Z&to=2020-08-17T05:33:28.000Z';\n\n  constructor(private httpClient: HttpClient) {}\n  getData(): Observable<any> {\n    return this.httpClient.get<any>(this.apiURL);\n  }\n\n  getHistoryData(): Observable<any> {\n    return this.httpClient.get<any>(this.apiURLHistory);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}